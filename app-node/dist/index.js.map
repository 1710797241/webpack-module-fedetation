{
  "version": 3,
  "sources": ["../index.js"],
  "sourcesContent": ["const chalk = require('chalk');\nconst { Command } = require('commander');\nconst fs = require('fs-extra');\nconst pkg = require('./package.json');\nconst path = require('path');\nconst inquirer = require('inquirer');\nlet name;\nfunction init() {\n    const program = new Command();\n    program\n        .command(pkg.name)\n        .version(pkg.version)\n        .description('cp info ')\n        .usage(`${chalk.green('<origin-path dest-path >')} [options]`)\n        .arguments('<origin-path> <dest-path>', 'copy files')\n        .option('-d, --dest <new path>', 'new path')\n        .option('-r, --rename <new name>', 'rename files')\n\n        .action((origin, dest, options) => {\n            checkFile(origin, dest);\n        });\n    program.parse();\n}\nfunction checkFile(origin, dest) {\n    const cwd = process.cwd();\n    origin = path.isAbsolute(origin) ? origin : path.join(cwd, origin);\n    dest = path.isAbsolute(dest) ? dest : path.join(cwd, dest);\n    const fileInfo = fs.statSync(origin);\n    if (!fs.existsSync(origin)) {\n        console.error('\u539F\u8DEF\u5F84\u4E0D\u5B58\u5728');\n    } else {\n        if (!fs.existsSync(dest)) {\n            fs.mkdirpSync(dest);\n            if (fileInfo.isFile()) {\n                cpFile(origin, path.resolve(dest, path.basename(origin)));\n            } else {\n                cpDirFile(origin, dest);\n            }\n        } else {\n            if (fileInfo.isFile()) {\n                cpFile(origin, path.resolve(dest, path.basename(origin)));\n            } else {\n                cpDirFile(origin, dest);\n            }\n        }\n    }\n}\n\nfunction cpFile(origin, dest) {\n    fs.copyFileSync(origin, dest);\n}\nfunction cpDirFile(url, dest) {\n    const currentFiles = fs.readdirSync(url);\n    if (currentFiles.length == 0) {\n        // console.error('\u76EE\u5F55\u4E0B\u6CA1\u6709\u6587\u4EF6', url);\n    } else {\n        // console.error('\u76EE\u5F55\u4E0B\u6709\u6587\u4EF6', url);\n    }\n    currentFiles.forEach(item => {\n        let fileUrl = path.resolve(url, item);\n        let info = fs.statSync(fileUrl);\n        if (info.isFile()) {\n            let destPath = path.resolve(dest, item);\n\n            if (fs.existsSync(destPath)) {\n            } else {\n                fs.copyFileSync(fileUrl, path.resolve(dest, item));\n            }\n        }\n        if (info.isDirectory()) {\n            fs.copySync(fileUrl, path.resolve(dest, item));\n        }\n    });\n}\ninit();\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAM,QAAQ,QAAQ;AACtB,IAAM,EAAE,YAAY,QAAQ;AAC5B,IAAM,KAAK,QAAQ;AACnB,IAAM,MAAM;AACZ,IAAM,OAAO,QAAQ;AACrB,IAAM,WAAW,QAAQ;AAEzB,gBAAgB;AACZ,QAAM,UAAU,IAAI,QAAQ;AAC5B,UACK,QAAQ,IAAI,IAAI,EAChB,QAAQ,IAAI,OAAO,EACnB,YAAY,UAAU,EACtB,MAAM,GAAG,MAAM,MAAM,0BAA0B,aAAa,EAC5D,UAAU,6BAA6B,YAAY,EACnD,OAAO,yBAAyB,UAAU,EAC1C,OAAO,2BAA2B,cAAc,EAEhD,OAAO,CAAC,QAAQ,MAAM,YAAY;AAC/B,cAAU,QAAQ,IAAI;AAAA,EAC1B,CAAC;AACL,UAAQ,MAAM;AAClB;AACA,mBAAmB,QAAQ,MAAM;AAC7B,QAAM,MAAM,QAAQ,IAAI;AACxB,WAAS,KAAK,WAAW,MAAM,IAAI,SAAS,KAAK,KAAK,KAAK,MAAM;AACjE,SAAO,KAAK,WAAW,IAAI,IAAI,OAAO,KAAK,KAAK,KAAK,IAAI;AACzD,QAAM,WAAW,GAAG,SAAS,MAAM;AACnC,MAAI,CAAC,GAAG,WAAW,MAAM,GAAG;AACxB,YAAQ,MAAM,sCAAQ;AAAA,EAC1B,OAAO;AACH,QAAI,CAAC,GAAG,WAAW,IAAI,GAAG;AACtB,SAAG,WAAW,IAAI;AAClB,UAAI,SAAS,OAAO,GAAG;AACnB,eAAO,QAAQ,KAAK,QAAQ,MAAM,KAAK,SAAS,MAAM,CAAC,CAAC;AAAA,MAC5D,OAAO;AACH,kBAAU,QAAQ,IAAI;AAAA,MAC1B;AAAA,IACJ,OAAO;AACH,UAAI,SAAS,OAAO,GAAG;AACnB,eAAO,QAAQ,KAAK,QAAQ,MAAM,KAAK,SAAS,MAAM,CAAC,CAAC;AAAA,MAC5D,OAAO;AACH,kBAAU,QAAQ,IAAI;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;AACJ;AAEA,gBAAgB,QAAQ,MAAM;AAC1B,KAAG,aAAa,QAAQ,IAAI;AAChC;AACA,mBAAmB,KAAK,MAAM;AAC1B,QAAM,eAAe,GAAG,YAAY,GAAG;AACvC,MAAI,aAAa,UAAU,GAAG;AAAA,EAE9B,OAAO;AAAA,EAEP;AACA,eAAa,QAAQ,UAAQ;AACzB,QAAI,UAAU,KAAK,QAAQ,KAAK,IAAI;AACpC,QAAI,OAAO,GAAG,SAAS,OAAO;AAC9B,QAAI,KAAK,OAAO,GAAG;AACf,UAAI,WAAW,KAAK,QAAQ,MAAM,IAAI;AAEtC,UAAI,GAAG,WAAW,QAAQ,GAAG;AAAA,MAC7B,OAAO;AACH,WAAG,aAAa,SAAS,KAAK,QAAQ,MAAM,IAAI,CAAC;AAAA,MACrD;AAAA,IACJ;AACA,QAAI,KAAK,YAAY,GAAG;AACpB,SAAG,SAAS,SAAS,KAAK,QAAQ,MAAM,IAAI,CAAC;AAAA,IACjD;AAAA,EACJ,CAAC;AACL;AACA,KAAK;",
  "names": []
}
